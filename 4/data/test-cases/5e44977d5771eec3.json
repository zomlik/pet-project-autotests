{"uid":"5e44977d5771eec3","name":"Регистрация пользователя с валидными данными","fullName":"tests.api.auth.test_user_registry.TestRegistry#test_create_new_user","historyId":"378f8a435b5668e4d9b84fccaa4da44b","time":{"start":1753344718393,"stop":1753344718402,"duration":9},"status":"broken","statusMessage":"pydantic_core._pydantic_core.ValidationError: 1 validation error for RegistryResponseModel\n  Invalid JSON: expected value at line 1 column 1 [type=json_invalid, input_value='<html>\\r\\n<head><title>5...n</body>\\r\\n</html>\\r\\n', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.11/v/json_invalid","statusTrace":"self = <test_user_registry.TestRegistry object at 0x7f0190294b30>\n\n    @allure.title(\"Регистрация пользователя с валидными данными\")\n    @allure.testcase(\"ID-100\")\n    def test_create_new_user(self):\n        user_data = PublicRegistryRequestModel()\n    \n        response = public_users_client().create_public_user(user_data)\n>       schema = RegistryResponseModel.model_validate_json(response.text)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       pydantic_core._pydantic_core.ValidationError: 1 validation error for RegistryResponseModel\nE         Invalid JSON: expected value at line 1 column 1 [type=json_invalid, input_value='<html>\\r\\n<head><title>5...n</body>\\r\\n</html>\\r\\n', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/json_invalid\n\ntests/api/auth/test_user_registry.py:21: ValidationError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"pydantic_core._pydantic_core.ValidationError: 1 validation error for RegistryResponseModel\n  Invalid JSON: expected value at line 1 column 1 [type=json_invalid, input_value='<html>\\r\\n<head><title>5...n</body>\\r\\n</html>\\r\\n', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.11/v/json_invalid","statusTrace":"self = <test_user_registry.TestRegistry object at 0x7f0190294b30>\n\n    @allure.title(\"Регистрация пользователя с валидными данными\")\n    @allure.testcase(\"ID-100\")\n    def test_create_new_user(self):\n        user_data = PublicRegistryRequestModel()\n    \n        response = public_users_client().create_public_user(user_data)\n>       schema = RegistryResponseModel.model_validate_json(response.text)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       pydantic_core._pydantic_core.ValidationError: 1 validation error for RegistryResponseModel\nE         Invalid JSON: expected value at line 1 column 1 [type=json_invalid, input_value='<html>\\r\\n<head><title>5...n</body>\\r\\n</html>\\r\\n', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.11/v/json_invalid\n\ntests/api/auth/test_user_registry.py:21: ValidationError","steps":[{"name":"Выполнение публичной регистрации пользователя","time":{"start":1753344718395,"stop":1753344718401,"duration":6},"status":"passed","steps":[{"name":"Выполнение POST-Запроса","time":{"start":1753344718395,"stop":1753344718401,"duration":6},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"url","value":"'auth/register'"},{"name":"json","value":"{'accepted_terms': 'true', 'email': 'tabs1964@duck.com', 'full_name': 'Isreal Baird', 'password': \"mv'4!@7}\", 'type': 'public', 'username': 'thriller_2040'}"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"payload","value":"PublicRegistryRequestModel(accepted_terms='true', email='tabs1964@duck.com', full_name='Isreal Baird', password=\"mv'4!@7}\", type='public', username='thriller_2040')"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"bcba395d8391d942","name":"log","source":"bcba395d8391d942.txt","type":"text/plain","size":214},{"uid":"81fec48187d995","name":"stderr","source":"81fec48187d995.txt","type":"text/plain","size":231}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"tag","value":"API"},{"name":"epic","value":"Пользователи"},{"name":"feature","value":"Auth"},{"name":"parentSuite","value":"tests.api.auth"},{"name":"suite","value":"test_user_registry"},{"name":"subSuite","value":"TestRegistry"},{"name":"host","value":"pkrvmpptgkbjq6m"},{"name":"thread","value":"5440-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.api.auth.test_user_registry"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"ID-100","url":"ID-100","type":"tms"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["API"]},"source":"5e44977d5771eec3.json","parameterValues":[]}