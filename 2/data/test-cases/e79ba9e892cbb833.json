{"uid":"e79ba9e892cbb833","name":"Авторизация пользователя с не валидными данными","fullName":"tests.api.auth.test_auth.TestAuth#test_user_login","historyId":"56e8a9c8c7154e53f6046edd038e5fa5","time":{"start":1753077886109,"stop":1753077886155,"duration":46},"status":"failed","statusMessage":"AssertionError: assert 405 == <HTTPStatus.UNAUTHORIZED: 401>\n +  where 405 = <Response [405 Not Allowed]>.status_code\n +  and   <HTTPStatus.UNAUTHORIZED: 401> = HTTPStatus.UNAUTHORIZED","statusTrace":"self = <test_auth.TestAuth object at 0x7f1e95c57aa0>\n\n    @allure.title(\"Авторизация пользователя с не валидными данными\")\n    @allure.testcase(\"ID-171\")\n    def test_user_login(self):\n        get_auth_client = public_users_client()\n        response = get_auth_client.auth(\n            AuthNormalRequestModel(\n                username=\"test\",\n                password=\"123456\"\n            ))\n>       assert response.status_code == HTTPStatus.UNAUTHORIZED\nE       assert 405 == <HTTPStatus.UNAUTHORIZED: 401>\nE        +  where 405 = <Response [405 Not Allowed]>.status_code\nE        +  and   <HTTPStatus.UNAUTHORIZED: 401> = HTTPStatus.UNAUTHORIZED\n\ntests/api/auth/test_auth.py:27: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 405 == <HTTPStatus.UNAUTHORIZED: 401>\n +  where 405 = <Response [405 Not Allowed]>.status_code\n +  and   <HTTPStatus.UNAUTHORIZED: 401> = HTTPStatus.UNAUTHORIZED","statusTrace":"self = <test_auth.TestAuth object at 0x7f1e95c57aa0>\n\n    @allure.title(\"Авторизация пользователя с не валидными данными\")\n    @allure.testcase(\"ID-171\")\n    def test_user_login(self):\n        get_auth_client = public_users_client()\n        response = get_auth_client.auth(\n            AuthNormalRequestModel(\n                username=\"test\",\n                password=\"123456\"\n            ))\n>       assert response.status_code == HTTPStatus.UNAUTHORIZED\nE       assert 405 == <HTTPStatus.UNAUTHORIZED: 401>\nE        +  where 405 = <Response [405 Not Allowed]>.status_code\nE        +  and   <HTTPStatus.UNAUTHORIZED: 401> = HTTPStatus.UNAUTHORIZED\n\ntests/api/auth/test_auth.py:27: AssertionError","steps":[{"name":"Выполнение POST-Запроса","time":{"start":1753077886148,"stop":1753077886154,"duration":6},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"url","value":"'/auth'"},{"name":"json","value":"{'username': 'test', 'type': 'normal', 'password': '123456'}"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"184b29370622a3c3","name":"log","source":"184b29370622a3c3.txt","type":"text/plain","size":182},{"uid":"ce6f1ec40675f09","name":"stderr","source":"ce6f1ec40675f09.txt","type":"text/plain","size":199}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"tag","value":"API"},{"name":"epic","value":"Пользователи"},{"name":"feature","value":"Auth"},{"name":"tag","value":"users"},{"name":"tag","value":"auth"},{"name":"parentSuite","value":"tests.api.auth"},{"name":"suite","value":"test_auth"},{"name":"subSuite","value":"TestAuth"},{"name":"host","value":"pkrvmq0rgcvqdmg"},{"name":"thread","value":"5467-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.api.auth.test_auth"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"ID-171","url":"ID-171","type":"tms"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["auth","API","users"]},"source":"e79ba9e892cbb833.json","parameterValues":[]}